@import "vendor/flex";
@import "defs";

// -----------------------------------------------------------------------------
// main layout

body {
    background: url(/static/images/global-background-marble.png) $body-bg-color fixed;

    // TODO need a stick footer, but this is close enough for now
    margin-bottom: 8em;
}

body > header {
    z-index: 5;
    position: relative;

    > nav.navbar {
        $bg-color: scale-color($secondary-accent, $saturation: -40%, $lightness: -80%);
        background: $bg-color url(/static/images/debut_dark.png) fixed;
        box-shadow:
            inset 0 -1px 1px -1px rgba(white, 0.5),
            inset 0 2em 3em -2em rgba(white, 0.2),
            0 0 3px rgba(black, 0.9);
        border-bottom: 1px solid #444;

        > ul.global-nav {
            margin: 0;
            padding: 0;
            list-style: none;

            color: #eee;

            // TODO float containment
            > li {
                display: inline-block;

                &.nav-search {
                    float: right;
                    font-size: 0.83em;
                    // TODO janktastic  :(
                    height: (1.5em + 0.33em * 2) / 0.83;
                    line-height: (1.5em + 0.33em * 2) / 0.83;
                    padding: 0 0.5em;
                }
                &.nav-auth {
                    float: right;
                }

                > a,
                > .not-a-link {
                    display: block;
                    padding: 0.33em 1em;
                    line-height: 1.5;
                }
                > a:hover {
                    background: rgba(scale-color($secondary-accent, $saturation: 30%, $lightness: 50%), 0.25);
                }

                > .selected {
                    box-shadow: inset 0 -0.5em 0.5em -0.5em hsl(0, 0%, 50%);
                    $bg-color: scale-color($secondary-accent, $saturation: -70%, $lightness: -10%);
                    background: url(/static/images/debut_dark.png) fixed $bg-color;
                    box-shadow:
                        inset 0 0.25em 0.33em rgba(black, 0.4);

                    &:hover {
                        background: scale-color($secondary-accent, $saturation: -50%, $lightness: -10%);
                    }
                }
            }

            a {
                text-decoration: none;
                color: #f4f4f4;
                &:visited,
                &:hover,
                &:visited:hover {
                    color: #f4f4f4;
                }
            }
        }
    }
}

.front-page-layout section {
    @extend .tile;
    padding: 1em;
    margin: 1em 0;
}

.ad {
    position: relative;

    > a:only-of-type {
        display: block;
    }

    &::before {
        display: block;
        font-size: 0.5em;
        line-height: 1;
        position: absolute;
        top: -1em;
        content: 'advertisement';
        opacity: 0.4;
    }
}
.ad-728x90 {
    width: 728px;
    height: 90px;
    margin: 0 auto;
    padding: 0;

    // Sorta chump hack, but whatever.  Need a margin when this floats between
    // the header and main
    body > & {
        margin: 1em auto;
    }
}
.ad-160x600 {
    width: 160px;
    height: 600px;
    margin: 0 auto;
    padding: 0;
}

.tile {
    border: 1px solid scale-color($primary-accent, $lightness: 50%);
    border-radius: 0.5em;
    box-shadow: 1px 1px 3px rgba(gray, 0.3);
    background: #fefefe;
}

main {
    position: relative;
    width: 90%;
    min-width: 990px;
    margin: 1em auto;

    > header {
        // Page title
        h1 {
            font-size: 2em;
            margin: 1rem;
            padding-bottom: 0.5rem;
            color: $h0-color;
            font-weight: normal;
            border-bottom: 1px solid $h0-border;
        }
        // Breadcrumbs
        > p {
            margin: 1rem 1rem 0;
            + h1 {
                margin-top: 0;
            }
        }

        // Section navigation, on the upper right
        nav {
            float: right;
            margin: 0.5rem;
            padding: 0;

            > ul {
                list-style: none;
                margin: 0;
                padding: 0;

                > li {
                    display: inline-block;
                    margin: 0 0.5em;
                }
            }
        }
    }

    section {
        h1 {
            font-size: 1.5rem;
            padding-bottom: 0.25rem;
            border-bottom: 1px solid $h1-border;
            color: $h1-color;
            font-weight: normal;
        }
        h2, section h1 {
            font-size: 1.33rem;
            padding-bottom: 0.25rem;
            border-bottom: 1px dotted scale-color($h1-border, $lightness: 15%);
            color: scale-color($h1-color, $lightness: 15%);
            font-weight: normal;
        }
    }
}

// TODO should this only apply to pastebin contents?
pre.pastebin {
    margin: 1em 0;
    padding: 0.75em;
    white-space: pre-wrap;
    border: 1px solid #999;
    background: white;
    box-shadow: 0 0 3px #ccc;
}

// XXX lol
textarea {
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
}


// -----------------------------------------------------------------------------
// general styling

a {
    color: $link-color;
    &:hover {
        color: scale-color($link-color, $lightness: -30%);
    }

    &:visited {
        color: $link-visited-color;
        &:hover {
            color: scale-color($link-visited-color, $lightness: -30%);
        }
    }
}

// TODO seems obvious candidate for archetype
input[type=search] {
    padding-left: 0.5em;
    padding-right: 0.5em;
    border-radius: 1em;
}

// TODO this too?
p {
    margin-top: 0;
}

// -----------------------------------------------------------------------------
// utility classes

// Image that's client-side resized (down only!) to a reasonable size
.image-capped {
    max-width: 200px;
    max-height: 200px;
}

ul.inline-list {
    margin: 0;
    padding: 0;

    > li {
        display: inline-block;

        &::before {
            content: "â€¢ ";
            margin: 0 0.33em;
        }
        &:first-child::before {
            content: none;
        }
    }
}

// -----------------------------------------------------------------------------
// widgets

.activity-feed {
    margin: 0;
    padding: 0;
    list-style: none;

    li {
        background: $container-bg;

        margin: 1em 0;
        box-shadow: 1px 1px 2px #ccc;

        .-header {
            padding: 0.5em;
            background: white;
        }
        .-timestamp {
            font-size: 0.8em;
            float: right;
        }
        .-title {
            font-size: 1.2em;
            font-family: serif;
        }
        .-body {
            padding: 1em;

            pre {
                white-space: pre-wrap;
                border-left: 3px solid $border-color;
                padding-left: 0.5em;
            }
        }
    }
}


// Ye media object, of course.  But with flexbox!
.media {
    @include flexbox;
}
.media-inset {
    margin-right: 1em;
}
.media-body {
    @include flex(1);
}

.media-body--with-footer {
    @include flexbox;
    @include flex-direction(column);
}
.media-body-main {
    @include flex(1);
}
.media-body-footer {
}


/// TODO this is precisely the sort of thing that should live in archetype
table.table-pretty {
    > tbody {
        > tr {
            // TODO standardize on grays
            border-bottom: 1px solid #e0e0e0;

            &:last-child {
                border-bottom: none;
            }

            &:nth-child(2n) {
                background: rgba(#808080, 0.1);
            }

            &:hover {
                background: hsla(225, 80%, 60%, 0.1);
            }
        }
    }
}

.unheader {
    font-size: 1rem;
    margin-left: 1em;
    font-weight: normal;
    color: #444;
}

// -----------------------------------------------------------------------------
// front page layouts -- probably need genericizing, probably need more
// options, probably need to be usable elsewhere.  or maybe this should just
// use a grid thing that lives in archetype?
.front-page-layout {
    @include flexbox;

    .front-page-main {
        @include flex(1);
        // workaround for a webkit/blink bug -- flexbox items have an implied
        // `min-width: auto;` which more or less does the right thing, but
        // webkit/blink don't implement this and don't understand `auto` as a
        // min-width.  luckily, `min-content` is the same as `auto` in the
        // absence of any other sizing information
        // ref: https://code.google.com/p/chromium/issues/detail?id=426898
        min-width: -webkit-min-content;
    }
    .front-page-sidebar {
        @include flex(none);
        width: 320px;
    }
}


// Add some default styling to markup blocks, since they can't easily change
// styling themselves
.markup {
    dl {
        dt {
            margin-right: 0.5em;
            margin-bottom: 0.5em;
            width: 12em;
            float: left;
            color: $primary-accent;
            text-align: right;
        }
        dt::before {
            content: '';
            display: block;
            clear: left;
        }
        dt::after {
            content: ':';
        }
        dd {
            margin: 0.5em 0;
        }
    }
}
